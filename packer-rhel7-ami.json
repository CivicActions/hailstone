{
    
  "builders": [{
    "type": "amazon-ebs",
    "access_key": "{{user `aws_access_key`}}",
    "secret_key": "{{user `aws_secret_key`}}",
    "region": "{{user `region`}}",
    "encrypt_boot": true,
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "RHEL-7.0*",
        "root-device-type": "ebs"
      },
      "owners": ["309956199498"],
      "most_recent": true
    },
    "instance_type": "{{user `instance_type`}}",
    "ssh_username": "{{user `ssh_username`}}",
    "ssh_pty": "true",
    "ami_name": "aefla-RHEL7-hardened-{{isotime \"2006-01-02-1504\"}}",
    "iam_instance_profile": "{{user `iam_instance_profile`}}",
    "associate_public_ip_address": true,
    "tags": {
      "SourceAMI": "{{ .SourceAMI }}",
      "validation_level": "{{user `validation_tag`}}"
    }


  }],
  "provisioners": [
    {
      "type": "file",
      "source": "./ssg-rhel7-ds-tailoring.xml",
      "destination": "/home/ec2-user/"
    },
    {
      "type": "shell",
      "inline": [
        "echo '****   Updating kernel   ****'",
        "sudo yum-config-manager --enable 'Red Hat Enterprise Linux Server 7 RHSCL (RPMs)'",
        "sudo yum -y update kernel kernel-tools*",
        "sudo systemctl reboot"
      ],
      "expect_disconnect": "true"
    },
    {
      "type": "shell",
      "inline": [
        "echo 'removing older kernels'",
        "sudo package-cleanup --version || sudo yum -y install yum-utils",
        "sudo package-cleanup --oldkernels --count=1 -y"
      ]
    },
    {
        "type": "shell",
        "script": "hello.sh",
        "execute_command": "sudo -S bash {{.Path}}"
    },
    {
          "environment_vars": [
            "bucket={{ user `bucket_name`}}",
            "ami_name=RHEL7-hardened-{{isotime \"2006-01-02-1504\"}}"
          ],
          "type": "shell",
          "script": "setup.sh",
          "execute_command": "{{.Vars}} sudo -E -sS bash '{{.Path}}'",
          "pause_before": "40s"
      }
  ],
  "post-processors": [
    {
      "type": "manifest",
      "output": "manifest.json",
      "strip_path": true
    }
  ]
}

